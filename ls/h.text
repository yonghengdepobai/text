http使用的是可靠传输协议
统一资源标识符Uniform Resource Identifer URI
统一资源定位符URL
URL 第一部分被称为方案， 说明了访问资源所使用的协议类型。这部分通常都是HTTP协议(http://)
第二部分给出了服务器的因特网地址
其余部分指定了Web服务器上的某人资源
大多数url方案的URL语法都是在这个由9部分构成的通用格式上：
<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<frag>
方案名大小无关


所有报文都会向下游流动。所有报文的发送者都在接收着的上游 报文包含客户端的请求或服务器的响应
报文一般分为三个部分：对报文进行描术的起始行、包含属性的首部块，以及可选的、包含数据的主体部分
请求报文格式：
<method> <request-URL> <version> // 起始行 说明要做什么 也可以叫请求行
<headers>
<entity-body>
响应报文格式 （只有起始行的语法有所不同）：
<version> <status> <reason-phrase> // 响应行
<headers>
<entity-body>

一个http事务是由一个请求命令和一个响应结果组成的
HTTP方法 (method)               描术                                    是否包含主体
GET             从服务器向客户端发送命资源                                      
PUT             将来自客户端的数据存储到一个命名的服务器资源中去                    是
DELETE          从服务器中删除命名资源
POST            将客户端数据发送到一个服务器网关应用程序                            是
HEAD            仅发送命名资源响应中的HTTP首部
TARCE           对可能经过代理服务器传送到服务器上的报文进行追踪
OPTIONS         决定在服务器上执行哪些方法

status 状态码
100 ~ 101               信息提示
200 ~ 206               成功
200                     ok
201                     created
202                     accepted 请求已被接受，但服务器未对其执行任何动作
203                     Non-AuthoritativeInfomation
204                     No content
205                     reset content. 负责告诉浏览器清除当前页面中的所有HTML表单元素
206                     partial content 成功执行了一部分或range（范围）请求
300 ~ 305               重定向
300                     multiple Choices 客户端求一个实际指向多个资源的url时会返回这个状态码
301                     moved Permanently 在请求的url已被移除使用
302                     found 与301类似
400 ~ 415               客户端错误
500 ~ 505               服务端错误

reason-phrase 原因短语 数字状态的可读版本，包含终止序列之前的所有文本

header 首部

entity-body 实体的主体部分 包含一个由任意数据组成的数据块 可以是空 报文的负荷就是http要传输的内容
每条HTTP响应报文返回时都会携带一个状态码， 是一个三位数字的代码
HTTP是一个应用层协议。HTTP无需操心网络通信的具体细节，把联网的细节都交给了通用、可靠的因特网传输协议TCP/IP
TCP提供了：
无差错的数据传输
按序传输（数据总是会按照发送的顺序到达）
未分段的数据流（可以在任意时刻以任意尺寸将数据发送出去
TCP 要知道IP和端口号
步骤如下
从URL解析服务器主机名
将主机名转换为ip地址
解析出端口号
建立一条与WEB服务器相连的TCP连接
向服务器发送一条HTTP请求报文
服务器向浏览器发送一条响应报文
关闭连接 浏览器显示文档

HTTP要传送一条报文时，会以流的形式将报文数据的内容通过打开的TCP连接按序传输。TCP收到数据流之后，
会将数据流砍成被称作段的小数据块，并将段封装在IP分组中，通过因特网传输

代理
位于客户端和服务器这间的HTTP中间实体
HTTP代理服务器，这是WEB安全、应用集成以有性能优化的重要组成模块
Web缓存 （Web cache) 或代理缓存（proxy cache）是种特殊的HTTP代理服务器
网关（gateway）是一种特殊的服务器，作为服务器的中间实体使用。通常用于将HTTP流量转换到其他的协议。
网关接受请求时就好像自已是资源的源端服务器一样
