http 方法
GET：通常用于请求服务器发送某些资源
HADE：请求资源的头部信息，并且这些头部信息与 HTTP GET方法请求时返回的一致。该请求方法的一个使用场景是在下载一个
大文件前先获取大小再决定是否要下载，以此可以节约带宽资源
OPTIONS:用于获取目的资源或者请求资源所支持的通信选项
POST:发送数据给服务器
PUT：用于新增资源或者使用请求中的有效负载替换目标资源的表现形式
DELETE:用于删除指定的资源
PATCH:用于对资源进行部分修改
CONNECT: HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器
TRACE: 回显服务器收到的请求，主要用于测试或诊断

请求报文:
请求行  请求方法字段、URL字段、HTTP协议版本字段。
请求头部 由关键字/值对组成，每行一对，关键字和值用英文冒号':'分隔
空行
请求体 请求携带的数据

响应报文
响应行 由协议版本，状态码和状态码的原因短语组成
响应头响应部首组成
空行
响应体 服务器响应的数据

通用首部字段
Cache-Control 控制缓存
Connection 连接管理、逐条首部
Upgrade 升级为其他协议
via 代理服务器的相关信息
Wraning 错误和警告通知
Transfor-Encoding 报文主体的传输编码格式
Trailer 报文未端的首部一浏览
Pragma 报文指令
Date 创建报文的日期

请求首部字段
Accept 客户端或者代理能够处理的媒体类型 ✨
Accept-Encoding 优先可处理的编码格式
Accept-Language 优先可处理的自然语言
Accept-Charset 优先可以处理的字符集
If-Match 比较实体标记（ETage） ✨
If-None-Match 比较实体标记（ETage）与 If-Match相反 ✨
If-Modified-Since 比较资源更新时间（Last-Modified）✨
If-Unmodified-Since比较资源更新时间（Last-Modified），与 If-Modified-Since相反 ✨
If-Rnages 资源未更新时发送实体byte的范围请求
Range 实体的字节范围请求 ✨
Authorization web的认证信息 ✨
Proxy-Authorization 代理服务器要求web认证信息
Host 请求资源所在服务器 ✨
From 用户的邮箱地址
User-Agent 客户端程序信息 ✨
Max-Forwrads 最大的逐跳次数
TE 传输编码的优先级
Referer 请求原始放的url
Expect 期待服务器的特定行为

响应首部字段
Accept-Ranges 能接受的字节范围
Age 推算资源创建经过时间
Location 令客户端重定向的URI ✨
vary  代理服务器的缓存信息
ETag 能够表示资源唯一资源的字符串 ✨
WWW-Authenticate 服务器要求客户端的验证信息
Proxy-Authenticate 代理服务器要求客户端的验证信息
Server 服务器的信息 ✨
Retry-After 和状态码503 一起使用的首部字段，表示下次请求服务器的时间

实体首部字段 （Entiy Header Fields）
Allow 资源可支持http请求的方法 ✨
Content-Language 实体的资源语言
Content-Encoding 实体的编码格式
Content-Length 实体的大小（字节）
Content-Type 实体媒体类型
Content-MD5 实体报文的摘要
Content-Location 代替资源的yri
Content-Rnages 实体主体的位置返回
Last-Modified 资源最后的修改资源 ✨
Expires 实体主体的过期资源 ✨

状态码
2xx 成功
200 OK，表示从客户端发来的请求在服务器端被正确处理 ✨
201 Created 请求已经被实现，而且有一个新的资源已经依据请求的需要而建立
202 Accepted 请求已接受，但是还没执行，不保证完成请求
204 No content，表示请求成功，但响应报文不含实体的主体部分
206 Partial Content，进行范围请求
3xx 重定向
301 moved permanently，永久性重定向，表示资源已被分配了新的 URL
302 found，临时性重定向，表示资源临时被分配了新的 URL ✨
303 see other，表示资源存在着另一个 URL，应使用 GET 方法丁香获取资源
304 not modified，表示服务器允许访问资源，但因发生请求未满足条件的情况
307 temporary redirect，临时重定向，和302含义相同
4xx 客户端错误
400 bad request，请求报文存在语法错误 ✨
401 unauthorized，表示发送的请求需要有通过 HTTP 认证的认证信息 ✨
403 forbidden，表示对请求资源的访问被服务器拒绝 ✨
404 not found，表示在服务器上没有找到请求的资源 ✨
408 Request timeout, 客户端请求超时
409 Confict, 请求的资源可能引起冲突
5xx 服务器错误
500 internal sever error，表示服务器端在执行请求时发生了错误 ✨
501 Not Implemented 请求超出服务器能力范围，例如服务器不支持当前请求所需要的某个功能，或者请求是服务器不支持的某个方法
503 service unavailable，表明服务器暂时处于超负载或正在停机维护，无法处理请求
505 http version not supported 服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本

web缓存
    web缓存是可以自动保存常见文档副本的HTTP设备。当web请求抵达缓存时，如果本地有“已缓存的”副本，就可以从本地存储设备而不是
    原始服务器中提取这个文档
缓存是一种存储给定资源副本并在请求时将其提供回来的技术
    缓存种类：浏览器缓存，代理缓存，网关缓存
    可以分两个类：专用缓存（私有缓存）专用于单个用户  共享缓存多用户共享
缓存目的
    减少冗余的数据传输，节省你的网络费用
    缓解网络瓶颈的问题。不需要更多的带宽就能够更快地加载页面
    降低了对原始服务器的要求。服务器可以更快地响应，避免过载的出现
    降低了距离时延
缓存的处理
    Http响应的内容是否可以缓存到客户端
    客户端是否可以直接从本地缓存中加载并展示，或者发送请求到服务端再验证（缓存是否过期）
    客户端将缓存标识发往服务端，服务端通过标识来判断客户端的缓存是否仍有效，或发送新的数据给客户端
相关首部字段
    默认存储
    Cache-Control
        no-store:禁止缓存
        no-cache: 缓存但重新验证    在使用缓存之前，先到服务器去验证
        public：公共缓存 可以被任何缓存器缓存
        s-maxage=<seconds>: 缓存有效时间 只适用于供多用户使用的公共缓存服务器（比如CDN缓存）
        private: 私有缓存   只能用于浏览器私有缓存中
        max-age=<seconds>: 缓存有效时间 表示能够被缓存的最大时间
    Expires 指明可以被客户端缓存，还告诉了时间（和Cache-control:max-age做的事情基本一致）
        Expires:value 为缓存过期时间 指定资源到期时间，是服务器端具体时间点 如果有max-age则会被忽略
缓存是否过期
    Cache-Control:no-cache不能直接使用，验证
    计算是否过期
        Date:创建报文的时间
协商缓存
    当客户端第一次请求时没带条件首部，服务端响应带有条件首部，如Last-Modified, ETag等，当下次缓存过期客户端
    将缓存的数据标识发住服务端进行验证
    HTTP定义的条件首部 If-Modified-Since 和 If-None-Match:
        Last-Modified(服务器响应首部)：服务器记录的资源的更新时间。
        If-Modified-Since(请求首部字段)：已缓存副本的最后修改日期
        last-Modified 只能精确到秒，秒以下的修改不能精确
    一个文件位于多个CDN服务器上内容虽然一样，当修改时间不一样。（比对后会返回信息更新）
    ETag和If-None-Match
        ETag(服务器响应首部)：实体标识。它是一种可将资源以字符串形式做唯一性标识的方式。服务器会为每份资源分配对应的
        ETag值
        If-None-Math(请求首部字段)：缓存的实体标签。用于指定If-None-Match字段值的实体标记（ETag）值与请求资源的ETag
        不致时，它就告知服务器处理请求返回新资源，相反返回状态码304Not Modified的响应
    Vary了解一下
缓存流程
    （1）当发起资源请求时，缓存对url报文进行解析，提取首部判断客户端是否有缓存